from os import path, listdir

# COMPANY = os.environ.get('COMPANY', 'юзернейм')

# # In-memory db
# # TODO: Switch to a proper DB (mb vector like Milvus?) and create nice migration tool + answer addition endpoint
# database = {
#     'Я могу использовать любую банковскую карту?': f'Сейчас мы можем принимать только переводы с карт, выпущенных российскими банками. Мы советуем отключать VPN перед тем, как делать перевод: часто бывает, что с включённым VPN формы оплаты работают некорректно или не работают вовсе. Для иностранных карт мы по-прежнему рекомендуем использовать GlobalGiving: платформа временно не может перевести нам эти деньги из-за ограничений внутри банковской системы. Но ваши пожертвования не пропадут: мы получим их в будущем, и они очень нам пригодятся.',
#     f'Безопасно ли поддерживать {COMPANY}?': f'Пока поддерживать нас безопасно с любых карт и в любом режиме. Если что-то изменится, мы сразу же отменим все подписки и прекратим прием пожертвований. Поэтому если вы видите, что мы принимаем переводы, то все в порядке. Но если пожертвования нам усиливают чувство тревоги, мы бы рекомендовали поддерживать напрямую наших подзащитных через платформу «Заодно»: все эти люди обратились за помощью к нам или к другим проектам. В случае с {COMPANY} мы уже нашли для них защитников, а вы можете помочь оплатить их работу прямым переводом на карту, минуя {COMPANY}. Такие переводы вряд ли когда-нибудь будут признаны небезопасными: только если жителям России запретят переводить деньги друг другу. Там же есть подзащитные и других проектов, которым нужна помощь (например, с оплатой штрафов). И еще мы принимаем пожертвования в криптовалюте: их сложнее отследить, а в случае некоторых валют, которые поддерживают анонимные транзакции (например, Monero) - невозможно.',
#     'Для чего нужен мой email?': f'Мы спрашиваем ваш email, чтобы в случае проблем с подпиской предупредить вас о них, проверить историю пожертвований и отписать вас, когда вы этого захотите. Имя нужно исключительно для корректного обращения к вам в письмах и рассылках, вы можете представиться так, как хотели бы, чтобы мы к вам обращались.',
#     'Можно ли перевести вам деньги с карты на карту?': f'Нет, мы не собираем деньги на карты. Однако вы можете поддержать напрямую наших подзащитных на платформе «Заодно»: все эти люди обратились за помощью к нам или к другим проектам. В случае с {COMPANY} мы уже нашли для них защитников, а вы можете помочь оплатить их работу прямым переводом на карту, минуя {COMPANY}, и ввод данных карты.',
#     'Как изменить сумму подписки?': f'Это можно сделать <a href="raise">здесь.</a>',
#     'Как отписаться?': f'Это можно сделать <a href="unsub">здесь.</a>',
#     'Как изменить карту, дату или время списания средств?': f'Чтобы сменить карту, достаточно отписаться и подписаться снова с новыми данными карты (именно в такой последовательности). Чтобы изменить дату и время подписки, придется отписаться, а затем подписаться снова в удобный для вас день. Напишите нам, и мы пришлем напоминание вам на почту.',
#     'Карту, на которую оформлена подписка, перевыпустили, что делать?': f'Даже если у карты изменился только срок действия, подписку нужно оформить заново. Для начала необходимо отписаться, а затем подписаться снова с новыми данными карты.',
#     'Мне не приходит подтверждение об отписке, как быть?': f'Такое происходит, если при подписке на пожертвование или при отписке неверно указана почта. Напишите нам, мы попробуем найти вашу подписку и отпишем вас вручную.',
#     'Можно ли где-то посмотреть историю моих пожертвований?': f'Пока такой возможности нет. Но вы всегда можете написать нам: мы расскажем, все ли в порядке с вашей подпиской, и пришлем историю платежей, если это необходимо.',
#     'Получите ли вы пожертвования, сделанные через GlobalGiving?': f'Да, но позже. Дело в том, что все пожертвования падают в фонд GlobalGiving (не напрямую {COMPANY}). Раз в месяц платформа перечисляет собранные деньги на счет проектов и организаций. В конце февраля 2024 года платформа прекратила принимать пожертвования в адрес {COMPANY} и других российских проектов в связи с возросшими для них рисками. Все пожертвования, сделанные ранее, дойдут до нас. В ближайшее время мы настроим другой способ поддерживать нас с карт иностранных банков и расскажем вам об этом.',
#     'Чем занимается проект?': f'{COMPANY} — это независимый правозащитный медиапроект, цель которого добиться полного прекращения преследований по политическим мотивам в России. Для этого мы собираем и публикуем информацию о задержаниях на акциях протеста и других случаях политических репрессий в России, координируем юридическую помощь задержанным и работаем над системными изменениями в сфере прав и свобод человека.',
#     'Чем занимается проект, когда нет митингов?': f'К сожалению, почти каждый митинг заканчивается задержаниями, и нередко — приговорами. Поэтому в течение еще многих месяцев после окончания митинга мы продолжаем искать и координировать адвокатов, оказывать помощь в судах, а после — консультируем и помогаем задержанным отправить жалобы в ЕСПЧ. Но помимо этого за последние годы работы не было ни дня, когда на нашу горячую линию не поступало звонков: в разных регионах России людей задерживают за одиночные пикеты, к активистам приходят с обысками или вызывают на профилактические беседы, ограничивают гражданские права и свободы. Помимо этого мы много занимаемся и улучшением работы, разработкой новых инструментов и правовых инструкций, которые должны помочь людям отстаивать свои гражданские права в будущем.',
# }


def load(directory: str) -> dict:
    """Load all text files in the given directory into a dictionary.
    
    Args:
        directory (str): The path to the directory containing text files.
        
    Returns:
        dict: A dictionary with filenames as keys and file contents as values.
    """
    text_files = {}
    for filename in listdir(directory):
        file_path = path.join(directory, filename)
        with open(file_path, 'r', encoding='utf-8') as file:
            text_files[filename] = file.read()
    return text_files


database = load(path.join(path.dirname(__file__), "knowledge_base"))

if __name__ == "__main__":
    print(database.keys())